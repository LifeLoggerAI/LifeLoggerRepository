export const UserSchema = z.object({
  uid: z.string(),
  displayName: z.string().optional(),
  email: z.string().email().optional(),
  createdAt: z.number(),
  avatarUrl: z.string().url().optional(),
  isProUser: z.boolean().default(false),
  onboardingComplete: z.boolean().default(false),
  pronouns: z.string().optional(),
  moodColor: z.string().optional(),
  avatarStyle: z.string().optional(),
  lastLoginAt: z.number().optional(),
  lastLogoutAt: z.number().optional(),
  stats: z.record(z.any()).optional(),
  socialGraph: z.record(z.any()).optional(),
  constellation: z.record(z.any()).optional(),
  // Fields for demo mode
  mood: z.string().optional(),
  location: z.string().optional(),
  lastVoiceTranscript: z.string().optional(),
  lastActivity: z.string().optional(),
  demoMode: z.boolean().optional(),
  settings: z.object({
    moodTrackingEnabled: z.boolean().default(true),
    passiveAudioEnabled: z.boolean().default(true),
    faceEmotionEnabled: z.boolean().default(false),
    dataExportEnabled: z.boolean().default(true),
    narratorVolume: z.number().min(0).max(1).default(0.8),
    ttsVoice: z.string().default("warmCalm"),
    pushNotifications: z.boolean().default(true),
    gpsAllowed: z.boolean().default(false),
    allowVoiceRetention: z.boolean().default(true),
    receiveWeeklyEmail: z.boolean().default(true),
    receiveMilestones: z.boolean().default(true),
    emailTone: z.string().default("poetic"),
    dataConsent: z.object({
      shareAnonymousData: z.boolean(),
      optedOutAt: z.number().nullable(),
    }).optional(),
    telemetryPermissionsGranted: z.boolean().default(false),
    cameraCapturePermissionsGranted: z.boolean().default(false),
    identityModelOptIn: z.boolean().default(false),
  }).optional(),
  narratorPrefs: z.object({
    toneStyle: z.string(),
    metaphorLexicon: z.array(z.string()),
    ttsConfig: z.object({ pitch: z.number(), speed: z.number() }),
  }).optional(),
  personaProfile: PersonaProfileSchema.optional(),
  symbolLexicon: z.record(z.any()).optional(),
  subscriptionTier: z.string().optional(),
});
export type User = z.infer<typeof UserSchema>;
