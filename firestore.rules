
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is signed in and is the owner of the document.
    function isOwner(doc_uid) {
      return request.auth != null && request.auth.uid == doc_uid;
    }

    // Users can create their own user document, and can only read/update their own.
    match /users/{userId} {
      allow create: if isOwner(userId);
      allow read, update: if isOwner(userId);
    }

    // Users can manage documents in their own subcollections (e.g., auraStates, memoryBlooms).
    match /users/{userId}/{collection}/{docId} {
      allow read, write: if isOwner(userId);
    }

    // Rules for user-owned data in top-level collections.
    match /people/{personId} {
      allow create: if isOwner(request.resource.data.uid);
      allow read, update, delete: if isOwner(resource.data.uid);
    }

    match /voiceEvents/{eventId} {
      allow create: if isOwner(request.resource.data.uid);
      allow read, update, delete: if isOwner(resource.data.uid);
    }
    
    match /dreamEvents/{dreamId} {
      allow create: if isOwner(request.resource.data.uid);
      allow read, update, delete: if isOwner(resource.data.uid);
    }

    match /innerTexts/{textId} {
      allow create: if isOwner(request.resource.data.uid);
      allow read, update, delete: if isOwner(resource.data.uid);
    }

    match /goals/{goalId} {
      allow create: if isOwner(request.resource.data.uid);
      allow read, update, delete: if isOwner(resource.data.uid);
    }
    
    match /tasks/{taskId} {
      allow create: if isOwner(request.resource.data.uid);
      allow read, update, delete: if isOwner(resource.data.uid);
    }

    match /audioEvents/{eventId} {
      allow create: if isOwner(request.resource.data.uid);
      allow read, update, delete: if isOwner(resource.data.uid);
    }
    
    match /cameraCaptures/{captureId} {
      allow create: if isOwner(request.resource.data.uid);
      allow read, update, delete: if isOwner(resource.data.uid);
    }

    match /symbolicImageInsights/{insightId} {
      allow create: if isOwner(request.resource.data.uid);
      allow read, update, delete: if isOwner(resource.data.uid);
    }

    match /permissions/{userId} {
      allow create, read, update, delete: if isOwner(userId);
    }

    match /onboardIntake/{intakeId} {
      allow create: if isOwner(request.resource.data.uid);
      allow read, update, delete: if isOwner(resource.data.uid);
    }

    match /calendarEvents/{eventId} {
      allow create: if isOwner(request.resource.data.uid);
      allow read, update, delete: if isOwner(resource.data.uid);
    }

    match /habitWatch/{habitId} {
      allow create: if isOwner(request.resource.data.uid);
      allow read, update, delete: if isOwner(resource.data.uid);
    }
  }
}
