rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      match /auraStates/{state} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /memoryBlooms/{bloomId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /moodLogs/{logId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    match /voiceEvents/{eventId} {
      allow read, create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false; // Events are immutable
    }

    match /audioEvents/{eventId} {
      allow read, create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false; // Events are immutable
    }

    match /dreamEvents/{eventId} {
      allow read, create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false; // Events are immutable
    }
    
    match /innerTexts/{reflectionId} {
      allow read, create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false; // Events are immutable
    }

    match /people/{personId} {
      allow read, write: if request.auth != null && request.resource.data.uid == request.auth.uid;
    }
    
    match /permissions/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /onboardIntake/{intakeId} {
        allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
    }

    match /goals/{goalId} {
      allow read, write: if request.auth != null && request.resource.data.uid == request.auth.uid;
    }

    match /tasks/{taskId} {
      allow read, write: if request.auth != null && request.resource.data.uid == request.auth.uid;
    }

    match /calendarEvents/{eventId} {
      allow read, write: if request.auth != null && request.resource.data.uid == request.auth.uid;
    }
    
    match /habitWatch/{habitId} {
      allow read, write: if request.auth != null && request.resource.data.uid == request.auth.uid;
    }
    
    match /weeklyScrolls/{userId}/{scrolls}/{scrollId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
