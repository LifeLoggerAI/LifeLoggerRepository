rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read and update their own profile.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      
      // Subcollections owned by the user
      match /auraStates/{docId} {
        allow read, write: if isOwner(userId);
      }
      match /moodLogs/{docId} {
        allow read, write: if isOwner(userId);
      }
      match /emotionCycles/{docId} {
        allow read, write: if isOwner(userId);
      }
      match /memoryBlooms/{docId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Permissions
    match /permissions/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Generic rule for top-level collections that store user-owned data
    function userOwnedCollection() {
      return request.path[1] in [
        'audioEvents', 'voiceEvents', 'dreamEvents', 'innerTexts', 
        'onboardIntake', 'goals', 'tasks', 'calendarEvents', 'habitWatch',
        'people'
      ];
    }

    match /{collection}/{docId}
      where userOwnedCollection() {
        // READ, UPDATE, DELETE: Check existing resource
        allow read, update, delete: if isOwner(resource.data.uid);
        // CREATE: Check incoming resource
        allow create: if isOwner(request.resource.data.uid);
    }

    // The messages queue is write-only for authenticated users.
    match /messages/queue/{messageId} {
      allow create: if request.auth != null;
      allow read, update, delete: if false;
    }
  }
}
