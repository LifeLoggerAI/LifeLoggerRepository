
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of a document.
    // It checks that the user is authenticated and their UID matches the provided userId.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Rule for the 'users' collection.
    // A user can create their own user document.
    // They can only read or update their own user document.
    match /users/{userId} {
      allow create: if isOwner(userId) && request.resource.data.uid == userId;
      allow read, update: if isOwner(userId);
    }

    // Rule for the 'permissions' collection.
    // A user can read and write to their own permissions document.
    match /permissions/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Generic rules for all other user-specific collections like goals, tasks, etc.
    // These collections must contain documents with a 'uid' field matching the user's ID.
    match /{collection}/{docId} {
      // Allow a user to create a document if it includes their own UID.
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      // Allow a user to read, update, or delete a document if the existing document's UID matches their own.
      allow read, update, delete: if request.auth != null && resource.data.uid == request.auth.uid;
    }
  }
}
