rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Users collection can be read/updated by the owner. Creation is handled by a function.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      // Deny create/delete to prevent users from creating their own profiles
      // or deleting them outside of the auth flow.
      allow create, delete: if false;
    }
    
    // Any document in these collections can be managed by the owner.
    // This covers onboarding and general app usage.
    match /{collection}/{docId} 
        where collection in [
            'permissions', 'onboardIntake', 'goals', 'tasks', 
            'calendarEvents', 'habitWatch', 'voiceEvents', 
            'audioEvents', 'dreamEvents', 'people', 'innerTexts', 
            'cameraCaptures', 'symbolicImageInsights'
        ] {
      // For create, check the UID in the incoming document data.
      allow create: if isOwner(request.resource.data.uid);
      // For read/update/delete, check the UID in the existing document data.
      allow read, update, delete: if isOwner(resource.data.uid);
    }

    // Subcollections under a user's document
    match /users/{userId}/{subcollection}/{docId} 
        where subcollection in ['auraStates', 'memoryBlooms'] {
      allow read, write: if isOwner(userId);
    }
  }
}
