
rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {
    // User-specific data
    match /{collection=users,permissions,tasks,moodTrends,voiceTranscripts,b2bExportOptIn,audioEvents,voiceEvents,dreams,innerTexts,faceSnapshots,goals,calendarEvents,habitWatch,onboardIntake,people,consentAudit,monetizationLog,emotionEvents,socialOverlays,recoveryBlooms,ritualCards}/{uid}/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }
    
    // User subcollections
    match /users/{uid}/auraStates/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == uid;
    }
    match /users/{uid}/emotionCycles/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == uid;
    }
    match /users/{uid}/memoryBlooms/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == uid;
    }

    // Internal data, not client-accessible
    match /anonymizedData/{hashId}/{metricId} {
      allow read, write: if false; 
    }
    match /b2bExports/{week}/{reportId} {
      allow read: if false;
    }

    // B2B Partner Data Access
    match /partnerAuth/{pid} {
       allow read, write: if false; // Cloud Functions only
    }
    match /darRequests/{rid} {
      allow read, write: if request.auth.token.admin == true;
    }
    match /exportSummaries/{eid} {
      allow read: if request.auth.token.admin == true ||
                  (resource.data.partnerId != null && request.auth.token.partnerId != null && resource.data.partnerId == request.auth.token.partnerId);
      allow write: if request.auth.token.admin == true;
    }
  }
}
