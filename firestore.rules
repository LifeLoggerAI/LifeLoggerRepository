
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read their own profile, and can only update their own profile.
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow update: if isOwner(userId);
      // Deny create/delete on the /users collection itself
      allow create, delete: if false;
    }
    
    // Users can create and read their own permissions document once.
    match /permissions/{userId} {
        allow read, create: if isOwner(userId);
        // Prevent modification after creation
        allow update, delete: if false;
    }
    
    // This rule covers all top-level collections where documents are directly
    // owned by a user and should only be accessible by that user.
    // The `resource.data.uid` is used for existing documents (read, update, delete)
    // The `request.resource.data.uid` is used for new documents (create)
    match /{collection}/{docId}
      where collection in [
        'audioEvents',
        'voiceEvents',
        'people',
        'dreamEvents',
        'innerTexts',
        'cameraCaptures',
        'symbolicImageInsights',
        'onboardIntake',
        'goals',
        'tasks',
        'calendarEvents',
        'habitWatch',
        'rituals',
        'timelineEvents'
      ] {
      allow read, delete: if isOwner(resource.data.uid);
      allow create: if isOwner(request.resource.data.uid);
      allow update: if isOwner(resource.data.uid) && isOwner(request.resource.data.uid);
    }
    
    // This rule covers collections that are subcollections of a user document.
    match /users/{userId}/{subcollection}/{docId}
       where subcollection in [
        'auraStates',
        'memoryBlooms',
        'emotionCycles'
      ] {
        allow read, write: if isOwner(userId);
    }
  }
}
