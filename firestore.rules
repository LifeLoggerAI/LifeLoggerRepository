
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users can read their own profile, and only update their own profile.
    // The create rule allows the initial user document to be created by the `createDefaultProfile` function.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if isOwner(userId) && request.resource.data.uid == userId;

      // Allow users to manage their own subcollections (auraStates, memoryBlooms, etc.)
      match /{subcollection}/{docId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Users can create and manage their own permissions document.
    match /permissions/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Generic rule for top-level collections where each document has a 'uid' field.
    // This covers: voiceEvents, dreamEvents, innerTexts, cameraCaptures, symbolicImageInsights,
    // people, goals, tasks, calendarEvents, habitWatch, and onboardIntake.
    match /{collection}/{docId} {
      allow read, update, delete: if isOwner(resource.data.uid);
      allow create: if isOwner(request.resource.data.uid);
    }
  }
}
