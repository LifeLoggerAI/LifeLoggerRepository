
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated and is the owner.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // A user can read, update, and create their own user document.
    match /users/{userId} {
      allow read, update, create: if isOwner(userId);
    }
    
    // A user can create, read and update their own permissions document.
    match /permissions/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Helper function for collections where documents contain a 'uid' field.
    // This handles checking ownership for create, update, and read operations.
    function isDocumentOwner() {
      // For create, `resource` is null, so we check the incoming data.
      // For update/read, we check the existing data on the server.
      return isOwner(request.resource.data.uid) || isOwner(resource.data.uid);
    }

    // Apply the owner-only rule to all data collections.
    match /audioEvents/{docId} { allow read, write: if isDocumentOwner(); }
    match /voiceEvents/{docId} { allow read, write: if isDocumentOwner(); }
    match /dreamEvents/{docId} { allow read, write: if isDocumentOwner(); }
    match /people/{docId} { allow read, write: if isDocumentOwner(); }
    match /innerTexts/{docId} { allow read, write: if isDocumentOwner(); }
    match /cameraCaptures/{docId} { allow read, write: if isDocumentOwner(); }
    match /symbolicImageInsights/{docId} { allow read, write: if isDocumentOwner(); }
    match /onboardIntake/{docId} { allow read, write: if isDocumentOwner(); }
    match /goals/{docId} { allow read, write: if isDocumentOwner(); }
    match /tasks/{docId} { allow read, write: if isDocumentOwner(); }
    match /calendarEvents/{docId} { allow read, write: if isDocumentOwner(); }
    match /habitWatch/{docId} { allow read, write: if isDocumentOwner(); }
    
    // Rules for any subcollections under a user's document.
    match /users/{userId}/{subcollection}/{docId} {
      allow read, write: if isOwner(userId);
    }
  }
}
